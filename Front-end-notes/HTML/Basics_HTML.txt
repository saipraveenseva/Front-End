HTML - Hypertext Markup Language
-Its a markup Language
-We don't implement complex logics here.
-Just markup a plain text onto a webpage.


-HTML Elements
<p> element represents a paragraph of text
<i> elements represents Italic text.
<h1> element repressents the main header on a page
<img> element embeds an image
<form> element represents a form

-------------------------------------------------------------------------------------------------------------
<p> element
<p>I am a paragraph</p>
-------------------------------------------------------------------------------------------------------------

<h> element
<h1>Heading level 1</h1>
<h2>Heading level 2</h2>
<h3>Heading level 3</h3>
<h4>Heading level 4</h4>
<h5>Heading level 5</h5>
<h6>Heading level 6</h6>

Example:

<h1>Beetles</h1>
    <h2>External morphology</h2>
        <h3>Head</h3>
            <h4>Mouthparts</h4>
        <h3>Thorax</h3>
            <h4>Prothorax</h4>
            <h4>Pterothorax</h4>

Output:

Beetles
    External 
    morphology
        Head
            Mouthparts
        Thorax
            Prothorax
            Pterothorax

Notes: 
The font size of each heading is default h1 to h6. large to small
Good practice is to maintain a single h1 tag

---------------------------------------------------------------------------------------------------------------
Inspect tool
-We can inspect the entire webpage with this option
-Just right click on any webpage and select Inspect
-In the inspect page on top left we see an option to select an item to inspect.
-Select that and select any section of the webpage, the corresponding code is highlighted in the inspect section.
-We can edit that and see the changes affected onto the webpage
-Since it is being modified in the local machine, upon refreshing, the webpage gets back to its normal state.
----------------------------------------------------------------------------------------------------------------

HTML Skeleton Explained

<!DOCTYPE html> // The DOCTYPE must be present. It informs the browser that this is an HTML document.
-DOCTYPE is a flag so it does not need a closing tag.

<html lang="en">

</html>         // An html start tag and an html end tag define the start and end of an HTML document.
-Also known as root element
-Permitted content:	One <head> element, followed by one <body> element.
-Tag omission: The start tag may be omitted if the first thing inside the <html> element is not a comment. The end tag may be omitted if the <html> element is not immediately followed by a comment.


<head>  // Indicates the head of the html page
-We declare title in this section
-The HTML page is missing head tags. Head tags are not needed in HTML.
-In HTML, everything before the body tag is considered a part of the head.

Notes: 
Type ! and hit tab in an html document, the html skeleton is auto generated by the editor(VS code).
Shift + Alt + F will format the entire html document and indents the code.

<body>  //body element is where we put our entire html code  in.
-Tag omission:The start tag may be omitted if the first thing inside it is not a space character, comment, <script> element or <style> element. The end tag may be omitted if the <body> element has contents or has a start tag, and is not immediately followed by a comment.
-Permitted parents:	It must be the second element of an <html> element.
----------------------------------------------------------------------------------------------------------------------------------------------------------
Lists

<li> element // Used to list out the content on the webpage
-li used under <ul> gives an unordered list of contents. Bullet points
-li  used under <ol> gives us an ordered list of contents. Numbers, Roman numbers etc..

Example:
<ul>
    <li>Neil Armstrong</li>
    <li>Alan Bean</li>
    <li>Peter Conrad</li>
    <li>Edgar Mitchell</li>
    <li>Alan Shepard</li>
</ul>

Output:
*Neil Armstrong
*Alan Bean
*Peter Conrad
*Edgar Mitchell
*Alan Shepard

This character attribute indicates the numbering type:
a: lowercase letters
A: uppercase letters
i: lowercase Roman numerals
I: uppercase Roman numerals
1: numbers

Example:
<ol>
  <li>first item</li>
  <li>second item</li>
  <li>third item</li>
</ol>

Output:
1.first item
2.second item
3.third item

Example:
<ol type="I">
  <li value="3">third item</li>
  <li>fourth item</li>
  <li>fifth item</li>
</ol>

III.third item
IV.fourth item
V.fifth item

Notes:
Notes: 
This attribute has been deprecated; use the CSS list-style-type property instead. Covered in CSS section


Nested Lists

Example:
   <ol>
        <li>David Goggins</li>
        <li>Andrew Tate</li>
        <li>Tristan Tate</li>
        <li>Huberman</li>
        <li>Jeff Cavaliere</li>
        <li>Chris Bumstead</li>
        <li>Arnold Schwargenegger</li>
        <ol>
            <li>Ronnie Coleman</li>
            <li>Jay cutler</li>
            <li>Vanoss</li>
        </ol>
    </ol>

Output:
1.David Goggins
2.Andrew Tate
3.Tristan Tate
4.Huberman
5.Jeff Cavaliere
6.Chris Bumstead
7.Arnold Schwargenegger
    1.Ronnie Coleman
    2.Jay cutler
    3.Vanoss

----------------------------------------------------------------------------------------------------------------------------------------------------------

Anchor tag <a>
--------------

The <a> HTML element (or anchor element), with its href attribute, creates a hyperlink to web pages, files, email addresses, locations in the same page, or anything else a URL can address.
Content within each <a> should indicate the link's destination. If the href attribute is present, pressing the enter key while focused on the <a> element will activate it.

Example:
<p>You can reach Michael at:</p>

<ul>
  <li><a href="https://example.com">Website</a></li>
  <li><a href="mailto:m.bluth@example.com">Email</a></li>
  <li><a href="tel:+123456789">Phone</a></li>
</ul>

Output:
You can reach Michael at:

*Website
*Email
*Phone

Note: You can use this anchor tag to get back to any URL or a local files

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

    <h1>About me</h1>
    <a href="Jordan_Peterson.html">Go Home</a>
</head>

<body>

</body>

</html>
--------------------------------------------------------------------------------------------------------------------------------------------
Image tag <img>

    <img align="right" width="500px" alt="This is a Jordan peterson image" src="pictures/JordanPeterson.jpg">

    Attributes:
    *align is used to align the pictures
    *src is used to source the image
    *width is used to assign the pixel size.
    *alt tag has the text that should be read out by accessibility.
    The source could be an image in the local machine or something on the internet.
    We have to include a url to source an image from the internet

    <img align="left"
        src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/ed/Peterson_Lecture_%2833522701146%29.png/330px-Peterson_Lecture_%2833522701146%29.png">

    <img align="left"
        src="https://scontent-maa2-2.xx.fbcdn.net/v/t39.30808-6/323430656_495319199164204_816737870013790965_n.jpg?_nc_cat=111&ccb=1-7&_nc_sid=e3f864&_nc_ohc=xj-Im8HItC8AX_Qdt8n&_nc_ht=scontent-maa2-2.xx&oh=00_AfDeSu7pEU7L70QJK8xB-GejvfVuxwN6Ui6AePL0ZBE5oA&oe=64A3E707">

    https://scontent-maa2-2.xx.fbcdn.net/v/t39.30808-6/323430656_495319199164204_816737870013790965_n.jpg?_nc_cat=111&ccb=1-7&_nc_sid=e3f864&_nc_ohc=xj-Im8HItC8AX_Qdt8n&_nc_ht=scontent-maa2-2.xx&oh=00_AfDeSu7pEU7L70QJK8xB-GejvfVuxwN6Ui6AePL0ZBE5oA&oe=64A3E707
    Inorder to get an image address, right click on any image that has privileges and select "Image address"

----------------------------------------------------------------------------------------------------------------------------------------
    Comment in html.

        <!-- Line commented-->
        Ctrl + / Comments a html line 
----------------------------------------------------------------------------------------------------------------------------------------
HTML5

The term HTML5 is essentially a buzzword that refers to a set of modern web technologies. This includes the HTML Living Standard, along with JavaScript APIs to enhance storage, multimedia, and hardware access.
You may sometimes hear about "new HTML5 elements", or find HTML5 described as a new version of HTML. 
HTML5 was the successor to previous HTML versions and introduced new elements and capabilities to the language on top of the previous version, HTML 4.01, as well as improving or removing some existing functionality. 
However, as a Living Standard HTML now has no version. The up-to-date specification can be found at html.spec.whatwg.org/.

html standard : https://html.spec.whatwg.org/

-----------------------------------------------------------------------------------------------------------------------------------------
<div>: The Content Division element

The <div> HTML element is the generic container for flow content. 
It is used to contain an content into a single block. We can contain them only using CSS. this will be covered in the later sessions.
It has no effect on the content or layout until styled in some way using CSS (e.g. styling is directly applied to it, or some kind of layout model like Flexbox is applied to its parent element).

Example:

HTML code

<div class="warning">
    <img src="/media/examples/leopard.jpg"
         alt="An intimidating leopard.">
    <p>Beware of the leopard</p>
</div>

CSS code
.warning {
    border: 10px ridge #f00;
    background-color: #ff0;
    padding: 0.5rem;
    display: flex;
    flex-direction: column;
}

.warning img {
    width: 100%;
}

.warning p {
    font: small-caps bold 1.2rem sans-serif;
    text-align: center;
}

Output:
Reference: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div

Inline Elements vs Block elements:
    Inline elements stay on a single line. anchor tag<a> is the example. 
    Block elements start on the next line. heading tags<h1>, paragraph tag<p> are an example.
    This is explained better in CSS sessions

--------------------------------------------------------------------------------------------------------------------------------------------
Span element <span>
    The <span> HTML element is a generic inline container for phrasing content, which does not inherently represent anything. 
    It can be used to group elements for styling purposes (using the class or id attributes), or because they share attribute values, such as lang. 
    It should be used only when no other semantic element is appropriate. <span> is very much like a <div> element, but <div> is a block-level element whereas a <span> is an inline-level element.
    Effect is seen only when CSS is involved.

    Example:

    HTML code:
    
    <p>Add the <span class="ingredient">basil</span>, <span class="ingredient">pine nuts</span> and <span class="ingredient">garlic</span> to a blender and blend into a paste.</p>

    <p>Gradually add the <span class="ingredient">olive oil</span> while running the blender slowly.</p>

    CSS code:

    span.ingredient {
    color: #f00;
    }

    Output:
    Add the basil, pine nuts and garlic to a blender and blend into a paste.
    Gradually add the olive oil while running the blender slowly.

    The words basel, pine nuts, garlic and olive oil will be in red color.
-------------------------------------------------------------------------------------------------------------------------------------------------
<hr>: The Thematic Break (Horizontal Rule) element
    The <hr> HTML element represents a thematic break between paragraph-level elements: 
    for example, a change of scene in a story, or a shift of topic within a section.
    Just displays a line under a heading or image etc..

    HTML code:

    <p>§1: The first rule of Fight Club is: You do not talk about Fight Club.</p>

    <hr>

    <p>§2: The second rule of Fight Club is: Always bring cupcakes.</p>

    Output:
    §1: The first rule of Fight Club is: You do not talk about Fight Club.
    ----------------------------------------------------------------------
    §2: The second rule of Fight Club is: Always bring cupcakes.

--------------------------------------------------------------------------------------------------------------------------------------------------
<br>: The Line Break element
The <br> HTML element produces a line break in text (carriage-return). 
It is useful for writing a poem or an address, where the division of lines is significant.

Example:
<p> O’er all the hilltops<br>
    Is quiet now,<br>
    In all the treetops<br>
    Hearest thou<br>
    Hardly a breath;<br>
    The birds are asleep in the trees:<br>
    Wait, soon like these<br>
    Thou too shalt rest.
</p>

Output:
O’er all the hilltops
Is quiet now,
In all the treetops
Hearest thou
Hardly a breath;
The birds are asleep in the trees:
Wait, soon like these
Thou too shalt rest.

Note: Instead of writing everyline under paragraph tag <p>, we can use <br> tag to break the line.

-------------------------------------------------------------------------------------------------------------------------------------------------
<sup>: The Superscript element
The <sup> HTML element specifies inline text which is to be displayed as superscript for solely typographical reasons. 
Superscripts are usually rendered with a raised baseline using smaller text.
a2 + 2ab + b2 = (a+b)2. It is not showing in an elevated view but the squares in this formula are displayed on a elevated level.

Example:

<p>The <em>Pythagorean theorem</em> is often expressed as the following equation:</p>

<p><var>a<sup>2</sup></var> + <var>b<sup>2</sup></var> = <var>c<sup>2</sup></var></p>

Output:

The Pythagorean theorem is often expressed as the following equation:

a2 + b2 = c2


Wikipedia citation is another good example.
------------------------------------------------------------------------------------------------------------------------------------------------
<sub>: The Subscript element
The <sub> HTML element specifies inline text which should be displayed as subscript for solely typographical reasons. 
Subscripts are typically rendered with a lowered baseline using smaller text.
Chemical formulas is an exampled for lowered base line text.

Example:

<p>Almost every developer's favorite molecule is
C<sub>8</sub>H<sub>10</sub>N<sub>4</sub>O<sub>2</sub>, also known as "caffeine."</p>

Output:

Almost every developer's favorite molecule is C8H10N4O2, also known as "caffeine."

-------------------------------------------------------------------------------------------------------------------------------------------------
HTML Entity codes

    These codes are used to print some special characters or symbols that cannot be entered using a keyboard. Like aces, spades, copyright symbol, diamond.
    The characters like < , > , & also should be represented using these codes. The browser will be able to comprehend these symbols, but it is A
    good practice to use entity codes to display these characters/symbols.

    You can find entity codes here: https://entitycode.com/#featured-content

    Examples:
    &lt; - <
    &gt; - >
    &amp; - &
    &#169; - copyright symbol.
--------------------------------------------------------------------------------------------------------------------------------
Semantics in markup
Instead of using <div> tags for the entire webpage to group a bunch of elements, we can provide a decent sematic or meaning to each <div> by replacing it 
with elements like header, nav, section, footer etc.
These elements does the same job as <div> but gives a semantic and adds meaning to the code. A good practice.
From a google crawler perspective, it would be easier for the crawler to find the nav tags and show relevant content from your webpage on the google search results.

Some of these <div> alternatives are
    section
    article
    nav
    main
    header
    footer
    aside 
    summary
    details
--------------------------------------------------------------------------------------------------------------------------------------------------
<main> element
The <main> HTML element represents the dominant content of the <body> of a document. 
The main content area consists of content that is directly related to or expands upon the central topic of a document, or the central functionality of an application.
A document mustn't have more than one <main> element that doesn't have the hidden attribute specified.
A good practice is to exclude sidebars, nav bars, search bar etc..
Everything that is important must be placed in main.

Example:

<header>Gecko facts</header>

<main>
    <p>Geckos are a group of usually small, usually nocturnal lizards. They are found on every continent except Australia.</p>
 
    <p>Many species of gecko have adhesive toe pads which enable them to climb walls and even windows.</p>
</main>

Output:

Gecko facts
Geckos are a group of usually small, usually nocturnal lizards. They are found on every continent except Australia.
Many species of gecko have adhesive toe pads which enable them to climb walls and even windows.
---------------------------------------------------------------------------------------------------------------------------------------------------
<nav> element

    nav is used to provide navigation links.
    Anything that is to be navigated within a same webpage or to a different website.
    We use nav for navigation. 

    Example:

    <nav class="crumbs">
    <ol>
        <li ><a href="#">Bikes</a></li>
        <li ><a href="#">BMX</a></li>
        <li >Jump Bike 3000</li>
    </ol>
</nav>

<h1>Jump Bike 3000</h1>
<p>This BMX bike is a solid step into the pro world. It looks as legit as it rides and is built to polish your skills.</p>

Output:

1. Bikes
2. BMX
3. Jump Bike 3000

Jump Bike 3000
This BMX bike is a solid step into the pro world. It looks as legit as it rides and is built to polish your skills.

Note: Bikes and BMX are hyperlinks and Jump Bike 3000 is normal text.
------------------------------------------------------------------------------------------------------------------------------------------------

<section>: The Generic Section element
The <section> HTML element represents a generic standalone section of a document, which doesn't have a more specific semantic element to represent it. 
Sections should always have a heading, with very few exceptions.
It doesn't have a specific meaning or semantic, its just writing code in a much more organized way.
The section would help us acheive it. Every segment of the webpage can be written as a section.
Nothing changes with or without section tag in terms of aesthetics.

Example:

<h1>Choosing an Apple</h1>
<section>
    <h2>Introduction</h2>
    <p>This document provides a guide to help with the important task of choosing the correct Apple.</p>
</section>

<section>
    <h2>Criteria</h2>
    <p>There are many different criteria to be considered when choosing an Apple — size, color, firmness, sweetness, tartness...</p>
</section>

Output:

Choosing an Apple
Introduction
This document provides a guide to help with the important task of choosing the correct Apple.

Criteria
There are many different criteria to be considered when choosing an Apple — size, color, firmness, sweetness, tartness...
-------------------------------------------------------------------------------------------------------------------------------------------------

<article>: The Article Contents element
    The <article> HTML element represents a self-contained composition in a document, page, application, or site, which is intended to be independently distributable or reusable (e.g., in syndication). 
    Examples include: a forum post, a magazine or newspaper article, or a blog entry, a product card, a user-submitted comment, an interactive widget or gadget, or any other independent item of content.
    Similar to section just to add a meaning.
    Used for writing articles and stuff

    Example:
    <article class="forecast">
    <h1>Weather forecast for Seattle</h1>
    <article class="day-forecast">
        <h2>03 March 2018</h2>
        <p>Rain.</p>
    </article>
    <article class="day-forecast">
        <h2>04 March 2018</h2>
        <p>Periods of rain.</p>
    </article>
    <article class="day-forecast">
        <h2>05 March 2018</h2>
        <p>Heavy rain.</p>
    </article>
</article>

-------------------------------------------------------------------------------------------------------------------------------------------------
<aside>: The Aside element
    The <aside> HTML element represents a portion of a document whose content is only indirectly related to the document's main content. 
    Asides are frequently presented as sidebars or call-out boxes.
    Used with CSS to tell the difference.

    Example:

    HTML code
    <p>Salamanders are a group of amphibians with a lizard-like appearance, including short legs and a tail in both larval and adult forms.</p>

    <aside>
        <p>The Rough-skinned Newt defends itself with a deadly neurotoxin.</p>
    </aside>

    <p>Several species of salamander inhabit the temperate rainforest of the Pacific Northwest, including the Ensatina, the Northwestern Salamander and the Rough-skinned Newt. Most salamanders are nocturnal, and hunt for insects, worms and other small creatures.</p>

    CSS code:

    aside {
    width: 40%;
    padding-left: 0.5rem;
    margin-left: 0.5rem;
    float: right;
    box-shadow: inset 5px 0 5px -5px #29627e;
    font-style: italic;
    color: #29627e;
    }

    aside > p {
        margin: 0.5rem;
    }

    p {
        font-family: 'Fira Sans', sans-serif;
    }

    Output reference: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside

----------------------------------------------------------------------------------------------------------------------------------------------

<header>
    The <header> HTML element represents introductory content, typically a group of introductory or navigational aids. 
    It may contain some heading elements but also a logo, a search form, an author name, and other elements.

    Example:
    <header>
        <a class="logo" href="#">Cute Puppies Express!</a>
    </header>

    <article>
    <header>
        <h1>Beagles</h1>
        <time>08.12.2014</time>
    </header>
    <p>I love beagles <em>so</em> much! Like, really, a lot. They’re adorable and their ears are so, so snuggly soft!</p>
    </article>

------------------------------------------------------------------------------------------------------------------------------------------------

<footer>
    The <footer> HTML element represents a footer for its nearest ancestor sectioning content or sectioning root element. 
    A <footer> typically contains information about the author of the section, copyright data or links to related documents.

Example:
    <article>
    <h1>How to be a wizard</h1>
    <ol>
        <li>Grow a long, majestic beard.</li>
        <li>Wear a tall, pointed hat.</li>
        <li>Have I mentioned the beard?</li>
    </ol>
    <footer>
        <p>© 2018 Gandalf</p>
    </footer>
</article>

----------------------------------------------------------------------------------------------------------------------------------------------
<time>: The (Date) Time element

The <time> HTML element represents a specific period in time. 
It may include the datetime attribute to translate dates into machine-readable format, allowing for better search engine results or custom features such as reminders.
It may represent one of the following:
    A time on a 24-hour clock.
    A precise date in the Gregorian calendar (with optional time and timezone information).
    A valid time duration.
Note: This is just to indicate the time in the machine readable format and does not change any appearence on the webpage.
Example:

<p>The Cure will be celebrating their 40th anniversary on <time datetime="2018-07-07">July 7</time> in London's Hyde Park.</p>

<p>The concert starts at <time datetime="20:00">20:00</time> and you'll be able to enjoy the band for at least <time datetime="PT2H30M">2h 30m</time>.</p>

Output:
The Cure will be celebrating their 40th anniversary on July 7 in London's Hyde Park.

The concert starts at 20:00 and you'll be able to enjoy the band for at least 2h 30m.
---------------------------------------------------------------------------------------------------------------------------------------------
<figure>: The Figure with Optional Caption element

The <figure> HTML element represents self-contained content, potentially with an optional caption, which is specified using the <figcaption> element. 
The figure, its caption, and its contents are referenced as a single unit.

Example:

HTML code:
<figure>
    <img src="/media/cc0-images/elephant-660-480.jpg"
         alt="Elephant at sunset">
    <figcaption>An elephant at sunset</figcaption>
</figure>
    
CSS code:

figure {
    border: thin #c0c0c0 solid;
    display: flex;
    flex-flow: column;
    padding: 5px;
    max-width: 220px;
    margin: auto;
}

img {
    max-width: 220px;
    max-height: 150px;
}

figcaption {
    background-color: #222;
    color: #fff;
    font: italic smaller sans-serif;
    padding: 3px;
    text-align: center;
}


Output reference: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure
-------------------------------------------------------------------------------------------------------------------
Important: Refer docs.emmet.io/cheetsheet for VS code emmet integration and formulas.
-------------------------------------------------------------------------------------------------------------------

HTML Tables

<table>: The Table element
The <table> HTML element represents tabular data — that is, information presented in a two-dimensional table comprised of rows and columns of cells containing data.
We can represent images in tabular for as well

Example:

HTML code:
<table>
    <thead>
        <tr>
            <th colspan="2">The table header</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>The table body</td>
            <td>with two columns</td>
        </tr>
    </tbody>
</table>

CSS code:
table,
td {
    border: 1px solid #333;
}

thead,
tfoot {
    background-color: #333;
    color: #fff;
}

Output reference: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table



Example 2:

<p>Simple table with header</p>
<table>
  <tr>
    <th>First name</th>
    <th>Last name</th>
  </tr>
  <tr>
    <td>John</td>
    <td>Doe</td>
  </tr>
  <tr>
    <td>Jane</td>
    <td>Doe</td>
  </tr>
</table>

<p>Table with thead, tfoot, and tbody</p>
<table>
  <thead>
    <tr>
      <th>Header content 1</th>
      <th>Header content 2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Body content 1</td>
      <td>Body content 2</td>
    </tr>
  </tbody>
  <tfoot>
    <tr>
      <td>Footer content 1</td>
      <td>Footer content 2</td>
    </tr>
  </tfoot>
</table>

<p>Table with colgroup</p>
<table>
  <colgroup span="4"></colgroup>
  <tr>
    <th>Countries</th>
    <th>Capitals</th>
    <th>Population</th>
    <th>Language</th>
  </tr>
  <tr>
    <td>USA</td>
    <td>Washington, D.C.</td>
    <td>309 million</td>
    <td>English</td>
  </tr>
  <tr>
    <td>Sweden</td>
    <td>Stockholm</td>
    <td>9 million</td>
    <td>Swedish</td>
  </tr>
</table>

<p>Table with colgroup and col</p>
<table>
  <colgroup>
    <col style="background-color: #0f0" />
    <col span="2" />
  </colgroup>
  <tr>
    <th>Lime</th>
    <th>Lemon</th>
    <th>Orange</th>
  </tr>
  <tr>
    <td>Green</td>
    <td>Yellow</td>
    <td>Orange</td>
  </tr>
</table>

<p>Simple table with caption</p>
<table>
  <caption>
    Awesome caption
  </caption>
  <tr>
    <td>Awesome data</td>
  </tr>
</table>

Output reference: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table

td : Table Data cell. Its a single cell in the table.
th : Table Heading
tr : Table row

-----------------------------------------------------------------------------------------------------------------------------------
<form>: The Form element

The <form> HTML element represents a document section containing interactive controls for submitting information.

Example:

HTML code:
<form action="" method="get" class="form-example">
  <div class="form-example">
    <label for="name">Enter your name: </label>
    <input type="text" name="name" id="name" required>
  </div>
  <div class="form-example">
    <label for="email">Enter your email: </label>
    <input type="email" name="email" id="email" required>
  </div>
  <div class="form-example">
    <input type="submit" value="Subscribe!">
  </div>
</form>

<form action="">
        <input type="text" placeholder="Enter username">
        <input type="password" placeholder="Enter password">
        <input type="color" placeholder="Pick a color">
        <input type="number" placeholder="Enter number" min="1" max="11" step="1" value="11">
    </form>


    *The action attribute indicates where the form data should go.
    *The method attribute specified which HTTP method should be used.
    *The input attribute can take input of around 20 types of data.
    *Find different types of data in this link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input
     

--------------------------------------------------------------------------------------------------------------------

<label>: The Label element

*label element makes it easier for the screenreader to read out the whats the label.
*A good example would be for checkbox input.
*It allows the screen reader to know that this particular text is associated with this check box
*The text in the label is actually clickable. You can tap on the label text and the checkpoint gets activated/deactivated.

<div class="preference">
  <label for="cheese">Do you like cheese?</label>
  <input type="checkbox" name="cheese" id="cheese" />
</div>

<div class="preference">
  <label for="peas">Do you like peas?</label>
  <input type="checkbox" name="peas" id="peas" />
</div>

*The id in the input element is an identifier associated to the checkbox. We use the identifier and associate it to the label.
*id should be unique for every input element

--
<label>
  Enter a number:
  <input type="number" placeholder="Select a number">
</label>

*THis is a nested label. You wont need a "for" in the label if we use nested labels
--
-----------------------------------------------------------------------------------------------
<button>: The Button element

The <button> HTML element is an interactive element activated by a user with a mouse, keyboard, finger, voice command, or other assistive technology. 
Once activated, it then performs an action, such as submitting a form or opening a dialog.

<button class="favorite styled" type="button">Add to favorites</button>

<button type="button">Submit</button> inside a form element will redirect to location specified in the "action" attribute of the form element.

* button can be represented with the "input" attribute as well.
<input type="submit">

*For custom texts on a button. Below are the syntaxes
<button type="button">Submit..!!</button>
<input type="submit" value="Submit..!!"</button>


-----------------------------------------------------------------------------------------------------
name attribute

every filed must have a unique name that sends the get request to the server
 <form action="/tacos">
        <input type="text" name="username" placeholder="Enter username">
        <input type="password" name="password" placeholder="Enter password">
        <input type="color" name="color" placeholder="Pick a color">
        <input type="number" name="number" placeholder="Enter number">
</form>
----------------------------------------------------------------------------------------------------
Search bar for Google and youtube using Form

    <form action="https://www.youtube.com/results">
        <input type="text" name="search_query">
        <button>Search YouTube</button>
    </form>

    <form action="https://www.google.com/search">
        <input type="text" name="q">
        <button>Search Google</button>
    </form>

* You can omit Submit button. Once we type something and hit Enter, it automatically searches with the text input. No need of button
* For youtube, you have to use "search_query" as the name in the input
* For Google, you have to use "q" as the name in the input.
---------------------------------------------------------------------------------------------------------
* Search on youtube using Radio button inputs
* Since we have to pick anyone and not multiple, we should have same name for all inputs.
* value is what passed as a input 
 
 <form action="https://www.youtube.com/results">


        <input type="radio" name="search_query" value="Jordan Peterson">
        <label for="jp">Jordan Peterson</label><br>


        <input type="radio" name="search_query" id="dg" value="David Goggins">
        <label for="dg">David Goggins</label><br>


        <input type="radio" name="search_query" id="jr" value="Joe Rogan">
        <label for="jr">Joe Rogan</label><br>

        <button>Search YouTube</button>
</form>

---------------------------------------------------------------------------------------------------------------
* Search on YouTube using input from a drop down list(select)
* Since we are using YouTube, we must use "search_query" as the name

<p>************Search using select(drop down list)*************</p>
    <form action="https://www.youtube.com/results">

        <select name="search_query" id="options">
            <option value="">Please select an option</option>
            <option value="Jordan Peterson">Jordan Peterson</option>
            <option value="David Goggins">David Goggins</option>
            <option value="Joe Rogan">Joe Rogan</option>
        </select>
        <button>Search YouTube</button>
    </form>
</p>

** <option value="David Goggins" selected>David Goggins</option>
* The selected keyword will show the option by default.
--------------------------------------------------------------------------------------------------------------------
* Google Search for a number using a slider(Range)
* Since its a google search we use name="q"
* Along with min and max, step provides a clear visual of which level we are in.
* On a smooth slider we wont be able to tell, but with a step, we can actually see the bar move by 1 step.
* Depends on the step count you have given in the input
* "value" denotes the default value

<p>************Google search for numbers using slidebar(range). Retarded shit*************</p>
    <form action="https://www.google.com/search">
        <input type="range" id="number" name="q" min="0" max="11" step="1" value="3">
        <label for="number">Select number</label>
        <button>Search Google</button>
    </form>

</p>
--------------------------------------------------------------------------------------------------------------------
* textarea takes long lines as input
** The input taken from textarea cannot be used as an input to any search like google or youtube

<p>************textarea*************</p>
    <form action=""></form>
    <label for="paragraph">Search for a song</label><br>
    <textarea name="q" id="paragraph" cols="10" rows="10"></textarea>
    <button>Submit</button>
</p>
----------------------------------------------------------------------------------------------------------------------
